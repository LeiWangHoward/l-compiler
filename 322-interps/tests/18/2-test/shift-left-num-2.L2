(
    (
        (array_size <- 21)
        (eax <- array_size)
        (call :count_up_array)
        (array_addr <- eax) ; address of just-initialized array
        (i <- eax)
        
        :loop
        (i += 4)
        (edx <- (mem i 0))
        (edx -= 1)
        (edx <<= 2)
        (edx += 1)
        ((mem i 0) <- edx)

        (array_size -= 2)
        (cjump array_size <= 1 :end :loop)

        :end
        (eax <- (print array_addr))
    )

    (   :count_up_array
        (count_to <- eax)
        (eax <- (allocate count_to 1))
        (array_base <- eax)
        (i <- 1) ; this will be the counter; starts at 0

        (dest <- array_base)
        :count_up_loop
        ((mem dest 4) <- i)
        (dest += 4)
        (i += 2) ; add an encoded 1

        (cjump i < count_to :count_up_loop :count_up_end)

        :count_up_end
        (eax <- array_base)
        (return)
    )
)
