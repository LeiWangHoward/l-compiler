(((eax <- 12)
  (call :fib)
  (eax <- eax)
  (eax <<= 1)
  (eax += 1)
  (eax <- (print eax)))

(:fib
(esp -= 8)
((mem ebp -8) <- eax)
(eax <- (mem ebp -8))
(cjump eax = 1 :result :c1)
:c1
(eax <- (mem ebp -8))
(cjump eax = 0 :result :c2)
:c2
(eax <- (mem ebp -8))
(eax -= 1)
((mem ebp -8) <- eax)
(eax <- (mem ebp -8))
(call :fib)
((mem ebp -4) <- eax)
(eax <- (mem ebp -8))
(eax -= 1)
((mem ebp -8) <- eax)
(eax <- (mem ebp -8))
(call :fib)
(ebx <- eax)
(eax <- (mem ebp -4))
(eax += ebx)
(esp += 8)
(return)
:result
(eax <- (mem ebp -8))
(esp += 8)
(return)))
