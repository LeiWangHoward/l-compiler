(((eax <- 5)
  (edx <- 7)
  (call :FUN)
  (eax += 2)
  (eax <- (print eax)))

(:FUN

  (ebx <- eax)

  (esp -= 4)
  ((mem esp 0) <- edx)

  (eax <- (allocate 3 1))
  ((mem eax 4) <- ebx)
  (call :FUN2)
  (ebx <- eax)

  (eax <- (allocate 3 1))
  (ecx <- (mem esp 0))
  ((mem eax 4) <- ecx)
  (call :FUN2)
  (ecx <- eax)

  (ebx += ecx)
  (ebx -= 1)
  (eax <- ebx)
  (tail-call :FUN3)

  (return))

(:FUN2
  (ecx <- (mem eax 4))
  (ecx += 2)
  (eax <- ecx)
  (return))

(:FUN3
  (eax += 6)
  (return)))
